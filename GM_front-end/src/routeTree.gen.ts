/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const ProtectedDashboardLazyImport = createFileRoute('/_protected/dashboard')()
const AuthAuthSignupLazyImport = createFileRoute('/_auth/auth/signup')()
const AuthAuthLoginLazyImport = createFileRoute('/_auth/auth/login')()
const AuthAuthBaseLazyImport = createFileRoute('/_auth/auth/base')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProtectedDashboardLazyRoute = ProtectedDashboardLazyImport.update({
  id: '/_protected/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_protected/dashboard.lazy').then((d) => d.Route),
)

const AuthAuthSignupLazyRoute = AuthAuthSignupLazyImport.update({
  id: '/_auth/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_auth/auth/signup.lazy').then((d) => d.Route),
)

const AuthAuthLoginLazyRoute = AuthAuthLoginLazyImport.update({
  id: '/_auth/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_auth/auth/login.lazy').then((d) => d.Route),
)

const AuthAuthBaseLazyRoute = AuthAuthBaseLazyImport.update({
  id: '/_auth/auth/base',
  path: '/auth/base',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_auth/auth/base.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth/base': {
      id: '/_auth/auth/base'
      path: '/auth/base'
      fullPath: '/auth/base'
      preLoaderRoute: typeof AuthAuthBaseLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth/login': {
      id: '/_auth/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth/signup': {
      id: '/_auth/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthAuthSignupLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof ProtectedDashboardLazyRoute
  '/auth/base': typeof AuthAuthBaseLazyRoute
  '/auth/login': typeof AuthAuthLoginLazyRoute
  '/auth/signup': typeof AuthAuthSignupLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof ProtectedDashboardLazyRoute
  '/auth/base': typeof AuthAuthBaseLazyRoute
  '/auth/login': typeof AuthAuthLoginLazyRoute
  '/auth/signup': typeof AuthAuthSignupLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_protected/dashboard': typeof ProtectedDashboardLazyRoute
  '/_auth/auth/base': typeof AuthAuthBaseLazyRoute
  '/_auth/auth/login': typeof AuthAuthLoginLazyRoute
  '/_auth/auth/signup': typeof AuthAuthSignupLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/auth/base' | '/auth/login' | '/auth/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/auth/base' | '/auth/login' | '/auth/signup'
  id:
    | '__root__'
    | '/'
    | '/_protected/dashboard'
    | '/_auth/auth/base'
    | '/_auth/auth/login'
    | '/_auth/auth/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ProtectedDashboardLazyRoute: typeof ProtectedDashboardLazyRoute
  AuthAuthBaseLazyRoute: typeof AuthAuthBaseLazyRoute
  AuthAuthLoginLazyRoute: typeof AuthAuthLoginLazyRoute
  AuthAuthSignupLazyRoute: typeof AuthAuthSignupLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ProtectedDashboardLazyRoute: ProtectedDashboardLazyRoute,
  AuthAuthBaseLazyRoute: AuthAuthBaseLazyRoute,
  AuthAuthLoginLazyRoute: AuthAuthLoginLazyRoute,
  AuthAuthSignupLazyRoute: AuthAuthSignupLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected/dashboard",
        "/_auth/auth/base",
        "/_auth/auth/login",
        "/_auth/auth/signup"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_protected/dashboard": {
      "filePath": "_protected/dashboard.lazy.tsx"
    },
    "/_auth/auth/base": {
      "filePath": "_auth/auth/base.lazy.tsx"
    },
    "/_auth/auth/login": {
      "filePath": "_auth/auth/login.lazy.tsx"
    },
    "/_auth/auth/signup": {
      "filePath": "_auth/auth/signup.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
